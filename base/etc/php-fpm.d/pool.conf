[global]
log_level = notice
error_log = /proc/self/fd/2
emergency_restart_threshold = 0
emergency_restart_interval = 0
process_control_timeout = 0
daemonize = no

[www]
include = /etc/php-fpm.d/listen.conf
; access.log = /proc/self/fd/1
user = nginx
group = nginx
catch_workers_output = yes

pm = ondemand
pm.max_children = 10
pm.process_idle_timeout = 10s
pm.max_requests = 500
pm.status_path = /status
ping.path = /ping

; Force error logging, should not be overridable using 'ini_set' from a PHP script
php_admin_value[log_errors] = on
php_admin_value[error_log] = '/proc/self/fd/2'
php_admin_value[display_errors] = 'stderr'

; Force timezone, should not be overridable using 'ini_set' from a PHP script
env[PHP_TIMEZONE] = $PHP_TIMEZONE
php_admin_value[date.timezone] = "${PHP_TIMEZONE}"

; Force upload maximums, should not be overridable using 'ini_set' from a PHP script
env[PHP_MAX_FILE_UPLOADS] = $PHP_MAX_FILE_UPLOADS
php_admin_value[max_file_uploads] = ${PHP_MAX_FILE_UPLOADS}

env[PHP_POST_MAX_SIZE] = $PHP_POST_MAX_SIZE
php_admin_value[post_max_size] = ${PHP_POST_MAX_SIZE}

env[PHP_UPLOAD_MAX_FILESIZE] = $PHP_UPLOAD_MAX_FILESIZE
php_admin_value[upload_max_filesize] = ${PHP_UPLOAD_MAX_FILESIZE}

; Force hard memory limit, should not be overridable using 'ini_set' from a PHP script
env[PHP_MEMORY_LIMIT] = $PHP_MEMORY_LIMIT
memory_limit = ${PHP_MEMORY_LIMIT}

; Set runtime limit, allow to be overridden via 'ini_set' since HumHub is using that
env[PHP_MAX_EXECUTION_TIME] = $PHP_MAX_EXECUTION_TIME
php_value[max_execution_time] = ${PHP_MAX_EXECUTION_TIME}


